using UnityEngine;using System.Collections;using System.Collections.Generic;using SimpleJson;
public class MapConfigData {
public const string NAME = "MapConfig";
private string _data="[{\"id\":1,\"canAtkIds\":[2,3],\"dialogueIds\":[1,2,3],\"overComeTimes\":1,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº1ºÅ\"},{\"id\":2,\"canAtkIds\":[1,3],\"dialogueIds\":[1,2,3],\"overComeTimes\":2,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº2ºÅ\"},{\"id\":3,\"canAtkIds\":[1,2],\"dialogueIds\":[1,2,3],\"overComeTimes\":2,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº3ºÅ\"},{\"id\":4,\"canAtkIds\":[1,3],\"dialogueIds\":[1,2,3],\"overComeTimes\":2,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº4ºÅ\"},{\"id\":5,\"canAtkIds\":[1,4],\"dialogueIds\":[1,2,3],\"overComeTimes\":3,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº5ºÅ\"},{\"id\":6,\"canAtkIds\":[1,5],\"dialogueIds\":[1,2,3],\"overComeTimes\":4,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº6ºÅ\"},{\"id\":7,\"canAtkIds\":[1,6],\"dialogueIds\":[1,2,3],\"overComeTimes\":5,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº7ºÅ\"},{\"id\":8,\"canAtkIds\":[1,7],\"dialogueIds\":[1,2,3],\"overComeTimes\":6,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº8ºÅ\"},{\"id\":9,\"canAtkIds\":[1,8],\"dialogueIds\":[1,2,3],\"overComeTimes\":7,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº9ºÅ\"},{\"id\":10,\"canAtkIds\":[1,9],\"dialogueIds\":[1,2,3],\"overComeTimes\":8,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº10ºÅ\"},{\"id\":11,\"canAtkIds\":[1,10],\"dialogueIds\":[1,2,3],\"overComeTimes\":8,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº11ºÅ\"},{\"id\":12,\"canAtkIds\":[1,11],\"dialogueIds\":[1,2,3],\"overComeTimes\":8,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº12ºÅ\"},{\"id\":13,\"canAtkIds\":[1,12],\"dialogueIds\":[1,2,3],\"overComeTimes\":8,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº13ºÅ\"},{\"id\":14,\"canAtkIds\":[1,13],\"dialogueIds\":[1,2,3],\"overComeTimes\":8,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº14ºÅ\"},{\"id\":15,\"canAtkIds\":[1,14],\"dialogueIds\":[1,2,3],\"overComeTimes\":8,\"monsterData\":[12,1,11,9,13,5],\"mapName\":\"Ð¡µº15ºÅ\"}]";
private object[] _dataJson;private List<MapConfig> _dataList=new List<MapConfig>();
public MapConfigData(){_dataJson = SimpleJson.SimpleJson.DeserializeObject<JsonArray> (_data).ToArray ();foreach (object jsonObject in _dataJson) {JsonObject jo=(JsonObject) jsonObject;MapConfig config=new MapConfig();_dataList.Add(config);foreach(string key in jo.Keys){object value=jo[key];System.Type type =typeof(MapConfig);System.Reflection.FieldInfo info=type.GetField(key);if(info==null){continue;}if (value is JsonArray) {JsonArray jarr=(JsonArray)value;int jarrSize=jarr.Count;if(info.FieldType.FullName=="System.Int32[]"){int[] data=new int[jarrSize];for(int i=0;i<jarrSize;i++){data[i]= (int)jarr[i];}info.SetValue (config, data);}else{string[] data=new string[jarrSize];for(int i=0;i<jarrSize;i++){data[i]= (string)jarr[i];}info.SetValue (config, data);}}else{info.SetValue(config,value);}}}_dataJson = null;_data = null;}public List<MapConfig> getList(){return _dataList;}}